version: "3.9"

networks:
  laravel:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: laravel_nginx
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - "php:php"
    command: [nginx-debug, "-g", "daemon off;"]
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:8
    container_name: laravel_mysql
    restart: unless-stopped
    tty: true
    ports:
      - 4306:3306
    volumes:
      - "./mysql:/var/lib/mysql"
    environment:
      MYSQL_DATABASE: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: laravel_php
    ports:
      - 9000:9000
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel

  # redis:
  #   image: redis:alpine
  #   container_name: redis
  #   restart: unless-stopped
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    entrypoint: ["composer", "--ignore-platform-reqs"]
    networks:
      - laravel

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ["/var/www/html/artisan"]
    networks:
      - laravel

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   container_name: mailhog
  #   ports:
  #     - 1025:1025
  #     - 8025:8025
  #   networks:
  #     - laravel
